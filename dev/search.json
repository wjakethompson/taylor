[{"path":[]},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement wjakethompson@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to taylor","title":"Contributing to taylor","text":"outlines propose change taylor.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to taylor","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to taylor","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://taylor.wjakethompson.com/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to taylor","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"wjakethompson/taylor\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to taylor","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://taylor.wjakethompson.com/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to taylor","text":"Please note taylor project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://taylor.wjakethompson.com/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 taylor authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://taylor.wjakethompson.com/dev/articles/palettes.html","id":"creating-palettes","dir":"Articles","previous_headings":"","what":"Creating palettes","title":"Using and creating color palettes","text":"taylor uses vctrs create special vector class color palettes can used create visualize palettes. can create palette using color_palette() function. pass vector hexadecimal values valid R color (colors()), palette created print preview colors. can also use color_palette() existing palette interpolate additional values, specifying want colors originally specified. Similarly, large color palette, can select just representative colors.","code":"library(taylor)  my_pal <- color_palette(c(\"firebrick\", \"turquoise\", \"#0051ba\")) my_pal #> <color_palette[3]> #>     firebrick  #>     turquoise  #>     #0051ba my_big_pal <- color_palette(my_pal, n = 10) my_big_pal #> <color_palette[10]> #>     #B22222  #>     #984C48  #>     #7F766F  #>     #66A096  #>     #4CCABC  #>     #38D0CD  #>     #2AB0C8  #>     #1C90C3  #>     #0E70BE  #>     #0051BA my_small_pal <- color_palette(my_big_pal, n = 5) my_small_pal #> <color_palette[5]> #>     #B22222  #>     #7F766F  #>     #4CCABC  #>     #2AB0C8  #>     #0051BA"},{"path":"https://taylor.wjakethompson.com/dev/articles/palettes.html","id":"built-in-palettes","dir":"Articles","previous_headings":"","what":"Built-in palettes","title":"Using and creating color palettes","text":"taylor package comes palettes built-, based Taylor Swift’s album covers. can viewed using taylor::album_palettes. can access single palette. Also included palette includes one representative color album, taylor::album_compare.","code":"album_palettes #> $taylor_swift #> <color_palette[5]> #>     #1D4737  #>     #81A757  #>     #1BAEC6  #>     #523d28  #>     #E7DBCC  #>  #> $fearless #> <color_palette[5]> #>     #6E4823  #>     #976F34  #>     #CBA863  #>     #ECD59F  #>     #E1D4C2  #>  #> $fearless_tv #> <color_palette[5]> #>     #624324  #>     #A47F45  #>     #CAA462  #>     #C5AA7C  #>     #EEDBA9  #>  #> $speak_now #> <color_palette[5]> #>     #2E1924  #>     #6C3127  #>     #833C63  #>     #D1A0C7  #>     #F5E8E2  #>  #> $speak_now_tv #> <color_palette[5]> #>     #2A122C  #>     #4a2454  #>     #72325F  #>     #874886  #>     #96689A  #>  #> $red #> <color_palette[5]> #>     #201F39  #>     #A91E47  #>     #7E6358  #>     #B0A49A  #>     #DDD8C9  #>  #> $red_tv #> <color_palette[5]> #>     #400303  #>     #731803  #>     #967862  #>     #B38468  #>     #C7C5B6  #>  #> $`1989` #> <color_palette[5]> #>     #5D4E5D  #>     #846578  #>     #92573C  #>     #C6B69C  #>     #D8D8CF  #>  #> $`1989_tv` #> <color_palette[5]> #>     #487398  #>     #659BBB  #>     #8BB5D2  #>     #AFC5D4  #>     #E4DFD3  #>  #> $reputation #> <color_palette[5]> #>     #2C2C2C  #>     #515151  #>     #5B5B5B  #>     #6E6E6E  #>     #B9B9B9  #>  #> $lover #> <color_palette[5]> #>     #76BAE0  #>     #8C4F66  #>     #B8396B  #>     #EBBED3  #>     #FFF5CC  #>  #> $folklore #> <color_palette[5]> #>     #3E3E3E  #>     #545454  #>     #5C5C5C  #>     #949494  #>     #EBEBEB  #>  #> $evermore #> <color_palette[5]> #>     #160E10  #>     #421E18  #>     #D37F55  #>     #85796D  #>     #E0D9D7  #>  #> $midnights #> <color_palette[5]> #>     #121D27  #>     #5A658B  #>     #6F86A2  #>     #85A7BA  #>     #AA9EB6  #>  #> $tortured_poets #> <color_palette[5]> #>     #1C160F  #>     #3F3824  #>     #635B3A  #>     #ADA795  #>     #F7F4F0 album_palettes$fearless_tv #> <color_palette[5]> #>     #624324  #>     #A47F45  #>     #CAA462  #>     #C5AA7C  #>     #EEDBA9 album_compare #> <color_palette[15]> #>     taylor_swift  #>     fearless  #>     fearless_tv  #>     speak_now  #>     speak_now_tv  #>     red  #>     red_tv  #>     1989  #>     1989_tv  #>     reputation  #>     lover  #>     folklore  #>     evermore  #>     midnights  #>     tortured_poets"},{"path":"https://taylor.wjakethompson.com/dev/articles/palettes.html","id":"using-color-palettes-with-ggplot2","dir":"Articles","previous_headings":"","what":"Using color palettes with ggplot2","title":"Using and creating color palettes","text":"taylor package comes set functions built plotting ggplot2 album palettes. example, can use scale_fill_taylor_c() create continuous scale based one album palettes. details use scale functions included taylor, check vignette(\"plotting\").  can also use custom palettes ggplot2. example, can create palette greens, use ggplot2::scale_fill_gradientn() ggplot2::scale_color_gradientn() use palette.  Finally, discrete scale, can use ggplot2::scale_fill_manual() ggplot2::scale_color_manual(). , use palmerpenguins map palette species penguin.","code":"library(ggplot2)  p <- ggplot(faithfuld, aes(waiting, eruptions, fill = density)) +   geom_tile() +   theme_minimal()  p + scale_fill_taylor_c(album = \"Fearless (Taylor's Version)\") green_pal <- color_palette(c(\"#E5F5E0\", \"#A1D99B\", \"#31A354\")) green_pal #> <color_palette[3]> #>     #E5F5E0  #>     #A1D99B  #>     #31A354  ggplot(faithfuld, aes(waiting, eruptions, fill = density)) +   geom_tile() +   scale_fill_gradientn(colors = green_pal) +   theme_minimal() library(palmerpenguins)  penguin_pal <- color_palette(c(Adelie = \"firebrick\",                                Chinstrap = \"goldenrod\",                                Gentoo = \"navy\")) penguin_pal #> <color_palette[3]> #>     Adelie  #>     Chinstrap  #>     Gentoo  ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +   geom_point(aes(shape = species, color = species), size = 3) +   scale_color_manual(values = penguin_pal) +   theme_minimal()"},{"path":"https://taylor.wjakethompson.com/dev/articles/plotting.html","id":"discrete-scales","dir":"Articles","previous_headings":"","what":"Discrete scales","title":"Give your ggplots a Taylor Swift theme","text":"First, let’s make bar graph showing valence song evermore.  can add evermore-inspired colors using scale_fill_taylor_d().  album argument can changed use different Taylor-inspired palette. example, can switch Speak Now using album = \"Speak Now\".  can also use functions non-Taylor Swift data. example, use scale_color_taylor_d() plot data palmerpenguins package.","code":"library(taylor) library(ggplot2)  evermore <- subset(taylor_album_songs, album_name == \"evermore\") evermore$track_name <- factor(evermore$track_name, levels = evermore$track_name)  p <- ggplot(evermore, aes(x = valence, y = track_name, fill = track_name)) +   geom_col(show.legend = FALSE) +   expand_limits(x = c(0, 1)) +   labs(y = NULL) +   theme_minimal() p p + scale_fill_taylor_d(album = \"evermore\") p + scale_fill_taylor_d(album = \"Speak Now\") library(palmerpenguins)  ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +   geom_point(aes(shape = species, color = species), size = 3) +   scale_color_taylor_d(album = \"Lover\") +   theme_minimal()"},{"path":"https://taylor.wjakethompson.com/dev/articles/plotting.html","id":"continuous-and-binned-scales","dir":"Articles","previous_headings":"","what":"Continuous and binned scales","title":"Give your ggplots a Taylor Swift theme","text":"using continuous scale, values interpolated colors defined palette. Fearless (Taylor’s Version) palette particularly good use case . illustrate, ’ll use classic example included ggplot2 package eruptions Old Faithful geyser duration eruptions.  Similarly, reputation folklore palettes work great gray scale images.   Just like ggplot2 scales, can also use _b variants create binned color scale.","code":"p <- ggplot(faithfuld, aes(waiting, eruptions, fill = density)) +   geom_tile() +   theme_minimal()  p + scale_fill_taylor_c(album = \"Fearless (Taylor's Version)\") p + scale_fill_taylor_c(album = \"reputation\") p + scale_fill_taylor_c(album = \"folklore\") p + scale_fill_taylor_b(album = \"evermore\")"},{"path":"https://taylor.wjakethompson.com/dev/articles/plotting.html","id":"album-scales","dir":"Articles","previous_headings":"","what":"Album scales","title":"Give your ggplots a Taylor Swift theme","text":"Finally, album scale can used plotting data multiple albums. Take example Metacritic ratings Taylor’s albums, stored taylor::taylor_albums. Let’s create bar graph showing rating album. ’ll first make album name factor variable. convenience variable, taylor::album_levels, included package let us easily order factor album release date.1 Metacritic doesn’t rating Taylor’s debut album, Taylor Swift, manually assign value can see full scale action. ’ll give bar color add pizzazz plot.  nice, wouldn’t better color related album? Enter scale_fill_albums()!  scale_fill_albums() scale_color_albums() functions automatically assign color based album name. wrappers around ggplot2::scale_fill_manual() ggplot2::scale_color_manual(), respectively. means colors still assigned correctly, even ordering albums changes, levels present.  However, also means album names must match expected names. , change reformat album name, fill colors won’t found. example, use title case album titles, fill color missing reputation, folklore, evermore, stylized lower case, well TORTURED POETS DEPARTMENT, stylized upper case. expected names defined taylor::album_levels object.","code":"taylor_albums #> # A tibble: 17 × 5 #>    album_name                    ep    album_release metacritic_score user_score #>    <chr>                         <lgl> <date>                   <int>      <dbl> #>  1 Taylor Swift                  FALSE 2006-10-24                  67        8.4 #>  2 The Taylor Swift Holiday Col… TRUE  2007-10-14                  NA       NA   #>  3 Beautiful Eyes                TRUE  2008-07-15                  NA       NA   #>  4 Fearless                      FALSE 2008-11-11                  73        8.4 #>  5 Speak Now                     FALSE 2010-10-25                  77        8.6 #>  6 Red                           FALSE 2012-10-22                  77        8.6 #>  7 1989                          FALSE 2014-10-27                  76        8.3 #>  8 reputation                    FALSE 2017-11-10                  71        8.3 #>  9 Lover                         FALSE 2019-08-23                  79        8.4 #> 10 folklore                      FALSE 2020-07-24                  88        9   #> 11 evermore                      FALSE 2020-12-11                  85        8.9 #> 12 Fearless (Taylor's Version)   FALSE 2021-04-09                  82        8.9 #> 13 Red (Taylor's Version)        FALSE 2021-11-12                  91        8.9 #> 14 Midnights                     FALSE 2022-10-21                  85        8.3 #> 15 Speak Now (Taylor's Version)  FALSE 2023-07-07                  81        9.2 #> 16 1989 (Taylor's Version)       FALSE 2023-10-27                  90       NA   #> 17 THE TORTURED POETS DEPARTMENT FALSE 2024-04-19                  76       NA metacritic <- taylor_albums  # Not Taylor's best work, so we'll give it a 72 metacritic$metacritic_score[1] <- 72L metacritic <- subset(metacritic, !is.na(metacritic_score)) metacritic$album_name <- factor(metacritic$album_name,                                 levels = album_levels)  ggplot(metacritic, aes(x = metacritic_score, y = album_name)) +   geom_col(aes(fill = album_name), show.legend = FALSE) +   labs(x = \"Metacritic Rating\", y = NULL) +   theme_minimal() ggplot(metacritic, aes(x = metacritic_score, y = album_name)) +   geom_col(aes(fill = album_name), show.legend = FALSE) +   scale_fill_albums() +   labs(x = \"Metacritic Rating\", y = NULL) +   theme_minimal() rand_critic <- metacritic[sample(seq_len(nrow(metacritic)), 5), ] rand_critic$album_name <- factor(rand_critic$album_name,                                  levels = sample(rand_critic$album_name,                                                  size = nrow(rand_critic)))  ggplot(rand_critic, aes(x = metacritic_score, y = album_name)) +   geom_col(aes(fill = album_name), show.legend = FALSE) +   scale_fill_albums() +   labs(x = \"Metacritic Rating\", y = NULL) +   theme_minimal() upper_critic <- metacritic upper_critic$album_name <- factor(upper_critic$album_name,                                   levels = album_levels,                                   labels = title_case(album_levels))  ggplot(upper_critic, aes(x = metacritic_score, y = album_name)) +   geom_col(aes(fill = album_name), show.legend = FALSE) +   scale_fill_albums() +   labs(x = \"Metacritic Rating\", y = NULL) +   theme_minimal()"},{"path":"https://taylor.wjakethompson.com/dev/articles/taylor.html","id":"i-trace-the-evidence","dir":"Articles","previous_headings":"","what":"I trace the evidence","title":"Welcome to taylor","text":"main data set taylor_all_songs. data set contains audio features Spotify lyrics Genius Taylor Swift’s songs. audio features include danceability, energy, valence track, described documentation Spotify API. data set also includes meta data track key, tempo, time signature, duration. Finally, lyrics track included nested list column. lyrics can accessed using tidyr::unnest(), using purrr::map() apply function set lyrics. detailed description accessing lyrics, see vignette(\"lyrics\"). related data set taylor_album_songs. data set contains information taylor_all_songs, filtered include tracks official studio albums. means standalone singles (e.g., “Young”) features (e.g., Big Red Machine’s “Renegade”) included. also exclude albums Taylor doesn’t , Taylor’s Version released. example, 1989 excluded favor 1989 (Taylor’s Version), Taylor Swift (debut) included Taylor’s Version album released. taylor also include small data set called taylor_albums. data set includes release date album, well critic user ratings Metacritic. Finally, data set dedicated Eras Tour, specifically surprise songs Taylor plays show. data set, eras_tour_surprise, contains date location show, color dress Taylor wore acoustic set, song performed instrument (piano guitar). data set also includes information additional songs performed mashups guests Taylor brought performance.","code":"taylor_all_songs #> # A tibble: 364 × 29 #>    album_name   ep    album_release track_number track_name     artist featuring #>    <chr>        <lgl> <date>               <int> <chr>          <chr>  <chr>     #>  1 Taylor Swift FALSE 2006-10-24               1 Tim McGraw     Taylo… NA        #>  2 Taylor Swift FALSE 2006-10-24               2 Picture To Bu… Taylo… NA        #>  3 Taylor Swift FALSE 2006-10-24               3 Teardrops On … Taylo… NA        #>  4 Taylor Swift FALSE 2006-10-24               4 A Place In Th… Taylo… NA        #>  5 Taylor Swift FALSE 2006-10-24               5 Cold As You    Taylo… NA        #>  6 Taylor Swift FALSE 2006-10-24               6 The Outside    Taylo… NA        #>  7 Taylor Swift FALSE 2006-10-24               7 Tied Together… Taylo… NA        #>  8 Taylor Swift FALSE 2006-10-24               8 Stay Beautiful Taylo… NA        #>  9 Taylor Swift FALSE 2006-10-24               9 Should've Sai… Taylo… NA        #> 10 Taylor Swift FALSE 2006-10-24              10 Mary's Song (… Taylo… NA        #> # ℹ 354 more rows #> # ℹ 22 more variables: bonus_track <lgl>, promotional_release <date>, #> #   single_release <date>, track_release <date>, danceability <dbl>, #> #   energy <dbl>, key <int>, loudness <dbl>, mode <int>, speechiness <dbl>, #> #   acousticness <dbl>, instrumentalness <dbl>, liveness <dbl>, valence <dbl>, #> #   tempo <dbl>, time_signature <int>, duration_ms <int>, explicit <lgl>, #> #   key_name <chr>, mode_name <chr>, key_mode <chr>, lyrics <list> taylor_albums #> # A tibble: 17 × 5 #>    album_name                    ep    album_release metacritic_score user_score #>    <chr>                         <lgl> <date>                   <int>      <dbl> #>  1 Taylor Swift                  FALSE 2006-10-24                  67        8.4 #>  2 The Taylor Swift Holiday Col… TRUE  2007-10-14                  NA       NA   #>  3 Beautiful Eyes                TRUE  2008-07-15                  NA       NA   #>  4 Fearless                      FALSE 2008-11-11                  73        8.4 #>  5 Speak Now                     FALSE 2010-10-25                  77        8.6 #>  6 Red                           FALSE 2012-10-22                  77        8.6 #>  7 1989                          FALSE 2014-10-27                  76        8.3 #>  8 reputation                    FALSE 2017-11-10                  71        8.3 #>  9 Lover                         FALSE 2019-08-23                  79        8.4 #> 10 folklore                      FALSE 2020-07-24                  88        9   #> 11 evermore                      FALSE 2020-12-11                  85        8.9 #> 12 Fearless (Taylor's Version)   FALSE 2021-04-09                  82        8.9 #> 13 Red (Taylor's Version)        FALSE 2021-11-12                  91        8.9 #> 14 Midnights                     FALSE 2022-10-21                  85        8.3 #> 15 Speak Now (Taylor's Version)  FALSE 2023-07-07                  81        9.2 #> 16 1989 (Taylor's Version)       FALSE 2023-10-27                  90       NA   #> 17 THE TORTURED POETS DEPARTMENT FALSE 2024-04-19                  76       NA eras_tour_surprise #> # A tibble: 166 × 9 #>    leg                date       city  night dress instrument song  mashup guest #>    <chr>              <date>     <chr> <int> <chr> <chr>      <chr> <chr>  <chr> #>  1 North America (Le… 2023-03-17 Glen…     1 red   guitar     mirr… NA     NA    #>  2 North America (Le… 2023-03-17 Glen…     1 red   piano      Tim … NA     NA    #>  3 North America (Le… 2023-03-18 Glen…     2 green guitar     this… NA     NA    #>  4 North America (Le… 2023-03-18 Glen…     2 green piano      Stat… NA     NA    #>  5 North America (Le… 2023-03-24 Las …     1 red   guitar     Our … NA     NA    #>  6 North America (Le… 2023-03-24 Las …     1 red   piano      Snow… NA     NA    #>  7 North America (Le… 2023-03-25 Las …     2 green guitar     cowb… NA     Marc… #>  8 North America (Le… 2023-03-25 Las …     2 green piano      Whit… NA     NA    #>  9 North America (Le… 2023-03-31 Arli…     1 green guitar     Sad … NA     NA    #> 10 North America (Le… 2023-03-31 Arli…     1 green piano      Ours… NA     NA    #> # ℹ 156 more rows"},{"path":"https://taylor.wjakethompson.com/dev/articles/taylor.html","id":"just-another-picture-to-burn","dir":"Articles","previous_headings":"","what":"Just another picture to burn","title":"Welcome to taylor","text":"Often explore data, want create data visualizations. Naturally, ’re exploring data Taylor Swift, need Taylor Swift-themed visualizations. taylor includes several color palettes helper functions ggplot2 facilitate visualizations. First, color palettes inspired album stored album_palettes. example, can look color palette based cover art Lover album. also color palette contains one color album, useful comparing albums . complete description color palette functionality taylor, see vignette(\"palettes\"). taylor also includes several functions using built-palettes color fill scales ggplot2. example, scale_color_albums() map album_compare palette geometries color mapped album name. following plot, display cumulative number surprise songs played album use scale_color_albums() highlight album within respective facet.  can take closer look 1989 (Taylor’s Version). figure can see early June August, Taylor took long break playing songs album. break ended Taylor resumed playing songs leading announcement 1989 (Taylor’s Version) Los Angeles end first U.S. leg tour. details ggplot2 scales provided taylor, see vignette(\"plotting\").","code":"album_palettes$lover #> <color_palette[5]> #>     #76BAE0  #>     #8C4F66  #>     #B8396B  #>     #EBBED3  #>     #FFF5CC album_compare #> <color_palette[15]> #>     taylor_swift  #>     fearless  #>     fearless_tv  #>     speak_now  #>     speak_now_tv  #>     red  #>     red_tv  #>     1989  #>     1989_tv  #>     reputation  #>     lover  #>     folklore  #>     evermore  #>     midnights  #>     tortured_poets library(dplyr) library(tidyr) library(ggplot2)  surprise_song_count <- eras_tour_surprise %>%   nest(dat = -c(leg, date, city, night)) %>%   arrange(date) %>%   mutate(leg = factor(leg, levels = unique(eras_tour_surprise$leg),                       labels = c(\"North America\\n(Leg 1)\",                                  \"South\\nAmerica\",                                  \"Asia-Pacific\"))) %>%   mutate(show_number = seq_len(n()), .after = night) %>%   unnest(dat) %>%   left_join(distinct(taylor_album_songs, track_name, album_name),             join_by(song == track_name),             relationship = \"many-to-one\") %>%   count(leg, date, city, night, show_number, album_name) %>%   complete(nesting(leg, date, city, night, show_number), album_name) %>%   mutate(n = replace_na(n, 0)) %>%   arrange(album_name, date, night) %>%   mutate(surprise_count = cumsum(n), .by = album_name) %>%   mutate(album_name = replace_na(album_name, \"Other\"),          album_name = factor(album_name, c(album_levels, \"Other\")),          album_group = album_name)  ggplot(surprise_song_count) +   facet_wrap(~ album_name, ncol = 3) +   geom_line(data = ~select(.x, -album_name),             aes(x = show_number, y = surprise_count, group = album_group),             color = \"grey80\", na.rm = TRUE) +   geom_line(aes(x = show_number, y = surprise_count, color = album_name),             show.legend = FALSE, linewidth = 2, na.rm = TRUE) +   scale_color_albums(na.value = \"grey80\") +   labs(x = \"Show\", y = \"Songs Played\") +   theme_minimal() +   theme(strip.text.x = element_text(hjust = 0, size = 10),         axis.title = element_text(size = 9)) missing_firsts <- tibble(date = as.Date(c(\"2023-11-01\",                                           \"2024-02-01\"))) day_ones <- surprise_song_count %>%   slice_min(date, by = c(leg, album_name)) %>%   select(leg, date, album_name) %>%   mutate(date = date - 1)  surprise_song_count %>%   bind_rows(missing_firsts) %>%   arrange(date) %>%   fill(leg, .direction = \"up\") %>%   bind_rows(day_ones) %>%   arrange(album_name, date) %>%   group_by(album_name) %>%   fill(surprise_count, .direction = \"down\") %>%   ggplot() +   facet_grid(cols = vars(leg), scales = \"free_x\", space = \"free_x\") +   geom_line(aes(x = date, y = surprise_count, group = album_name),             color = \"grey80\", na.rm = TRUE) +   geom_line(data = ~filter(.x, album_name == \"1989 (Taylor's Version)\"),             aes(x = date, y = surprise_count, color = album_name),             show.legend = FALSE, size = 2, na.rm = TRUE) +   scale_color_albums() +   scale_x_date(breaks = \"month\", date_labels = \"%b %Y\", expand = c(.02, .02)) +   labs(x = NULL, y = \"Songs Played\") +   theme_minimal() +   theme(strip.text.x = element_text(hjust = 0, size = 10),         axis.title = element_text(size = 9))"},{"path":"https://taylor.wjakethompson.com/dev/articles/taylor.html","id":"i-could-show-you-incredible-things","dir":"Articles","previous_headings":"","what":"I could show you incredible things","title":"Welcome to taylor","text":"many ways can explore data, , honestly, baby, ’s counting? collection analyses use data taylor found wild. use data find useful, please reach —love see package used!","code":""},{"path":"https://taylor.wjakethompson.com/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"W. Jake Thompson. Author, maintainer, copyright holder.","code":""},{"path":"https://taylor.wjakethompson.com/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thompson W (2024). taylor: Lyrics Song Data Taylor Swift's Discography. R package version 3.1.0.9000, https://github.com/wjakethompson/taylor, https://taylor.wjakethompson.com.","code":"@Manual{,   title = {taylor: Lyrics and Song Data for Taylor Swift's Discography},   author = {W. Jake Thompson},   year = {2024},   note = {R package version 3.1.0.9000,     https://github.com/wjakethompson/taylor},   url = {https://taylor.wjakethompson.com}, }"},{"path":[]},{"path":"https://taylor.wjakethompson.com/dev/index.html","id":"overview-","dir":"","previous_headings":"","what":"Overview","title":"Taylor Swift song data","text":"goal taylor provide easy access curated data set Taylor Swift songs, including lyrics audio characteristics. Data comes Genius Spotify API.","code":""},{"path":"https://taylor.wjakethompson.com/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Taylor Swift song data","text":"can install released version taylor CRAN : install development version GitHub use:","code":"install.packages(\"taylor\") # install.packages(\"remotes\") remotes::install_github(\"wjakethompson/taylor\")"},{"path":"https://taylor.wjakethompson.com/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Taylor Swift song data","text":"three main data sets. first taylor_album_songs, includes lyrics audio features Spotify API songs Taylor’s official studio albums. Notably excludes singles released separately album (e.g., Young, Christmas Tree Farm, etc.), non-Taylor-owned albums Taylor-owned alternative (e.g., Fearless excluded favor Fearless (Taylor’s Version)). support artists owning work. can access Taylor’s entire discography taylor_all_songs. includes songs taylor_album_songs plus EPs, individual singles, original versions albums re-released Taylor’s Version. Finally, small data set, taylor_albums, summarizing Taylor’s album release history.","code":"taylor_album_songs #> # A tibble: 240 × 29 #>    album_name   ep    album_release track_number track_name     artist featuring #>    <chr>        <lgl> <date>               <int> <chr>          <chr>  <chr>     #>  1 Taylor Swift FALSE 2006-10-24               1 Tim McGraw     Taylo… <NA>      #>  2 Taylor Swift FALSE 2006-10-24               2 Picture To Bu… Taylo… <NA>      #>  3 Taylor Swift FALSE 2006-10-24               3 Teardrops On … Taylo… <NA>      #>  4 Taylor Swift FALSE 2006-10-24               4 A Place In Th… Taylo… <NA>      #>  5 Taylor Swift FALSE 2006-10-24               5 Cold As You    Taylo… <NA>      #>  6 Taylor Swift FALSE 2006-10-24               6 The Outside    Taylo… <NA>      #>  7 Taylor Swift FALSE 2006-10-24               7 Tied Together… Taylo… <NA>      #>  8 Taylor Swift FALSE 2006-10-24               8 Stay Beautiful Taylo… <NA>      #>  9 Taylor Swift FALSE 2006-10-24               9 Should've Sai… Taylo… <NA>      #> 10 Taylor Swift FALSE 2006-10-24              10 Mary's Song (… Taylo… <NA>      #> # ℹ 230 more rows #> # ℹ 22 more variables: bonus_track <lgl>, promotional_release <date>, #> #   single_release <date>, track_release <date>, danceability <dbl>, #> #   energy <dbl>, key <int>, loudness <dbl>, mode <int>, speechiness <dbl>, #> #   acousticness <dbl>, instrumentalness <dbl>, liveness <dbl>, valence <dbl>, #> #   tempo <dbl>, time_signature <int>, duration_ms <int>, explicit <lgl>, #> #   key_name <chr>, mode_name <chr>, key_mode <chr>, lyrics <list> taylor_all_songs #> # A tibble: 364 × 29 #>    album_name   ep    album_release track_number track_name     artist featuring #>    <chr>        <lgl> <date>               <int> <chr>          <chr>  <chr>     #>  1 Taylor Swift FALSE 2006-10-24               1 Tim McGraw     Taylo… <NA>      #>  2 Taylor Swift FALSE 2006-10-24               2 Picture To Bu… Taylo… <NA>      #>  3 Taylor Swift FALSE 2006-10-24               3 Teardrops On … Taylo… <NA>      #>  4 Taylor Swift FALSE 2006-10-24               4 A Place In Th… Taylo… <NA>      #>  5 Taylor Swift FALSE 2006-10-24               5 Cold As You    Taylo… <NA>      #>  6 Taylor Swift FALSE 2006-10-24               6 The Outside    Taylo… <NA>      #>  7 Taylor Swift FALSE 2006-10-24               7 Tied Together… Taylo… <NA>      #>  8 Taylor Swift FALSE 2006-10-24               8 Stay Beautiful Taylo… <NA>      #>  9 Taylor Swift FALSE 2006-10-24               9 Should've Sai… Taylo… <NA>      #> 10 Taylor Swift FALSE 2006-10-24              10 Mary's Song (… Taylo… <NA>      #> # ℹ 354 more rows #> # ℹ 22 more variables: bonus_track <lgl>, promotional_release <date>, #> #   single_release <date>, track_release <date>, danceability <dbl>, #> #   energy <dbl>, key <int>, loudness <dbl>, mode <int>, speechiness <dbl>, #> #   acousticness <dbl>, instrumentalness <dbl>, liveness <dbl>, valence <dbl>, #> #   tempo <dbl>, time_signature <int>, duration_ms <int>, explicit <lgl>, #> #   key_name <chr>, mode_name <chr>, key_mode <chr>, lyrics <list> taylor_albums #> # A tibble: 17 × 5 #>    album_name                    ep    album_release metacritic_score user_score #>    <chr>                         <lgl> <date>                   <int>      <dbl> #>  1 Taylor Swift                  FALSE 2006-10-24                  67        8.4 #>  2 The Taylor Swift Holiday Col… TRUE  2007-10-14                  NA       NA   #>  3 Beautiful Eyes                TRUE  2008-07-15                  NA       NA   #>  4 Fearless                      FALSE 2008-11-11                  73        8.4 #>  5 Speak Now                     FALSE 2010-10-25                  77        8.6 #>  6 Red                           FALSE 2012-10-22                  77        8.6 #>  7 1989                          FALSE 2014-10-27                  76        8.3 #>  8 reputation                    FALSE 2017-11-10                  71        8.3 #>  9 Lover                         FALSE 2019-08-23                  79        8.4 #> 10 folklore                      FALSE 2020-07-24                  88        9   #> 11 evermore                      FALSE 2020-12-11                  85        8.9 #> 12 Fearless (Taylor's Version)   FALSE 2021-04-09                  82        8.9 #> 13 Red (Taylor's Version)        FALSE 2021-11-12                  91        8.9 #> 14 Midnights                     FALSE 2022-10-21                  85        8.3 #> 15 Speak Now (Taylor's Version)  FALSE 2023-07-07                  81        9.2 #> 16 1989 (Taylor's Version)       FALSE 2023-10-27                  90       NA   #> 17 THE TORTURED POETS DEPARTMENT FALSE 2024-04-19                  76       NA"},{"path":"https://taylor.wjakethompson.com/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Taylor Swift song data","text":"Contributions welcome. ensure smooth process, please review Contributing Guide. Please note taylor project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/album_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct ordering of Taylor Swift's albums — album_levels","title":"Correct ordering of Taylor Swift's albums — album_levels","text":"Easily create factor variable Taylor Swift's albums. Rather specifying album individually, can use shortcut vector already specified ordering.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/album_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct ordering of Taylor Swift's albums — album_levels","text":"","code":"album_levels"},{"path":"https://taylor.wjakethompson.com/dev/reference/album_levels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Correct ordering of Taylor Swift's albums — album_levels","text":"vector length 15. element album name, order can used making factor variables.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/album_levels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correct ordering of Taylor Swift's albums — album_levels","text":"Albums listed release order, one notable exception. \"Taylor's Version\" releases list directly following original. , Fearless (Taylor's Version) comes directly Fearless, rather evermore, released. \"Taylor's Version\" often stand-original, taylor_album_songs. Thus, often makes sense album placed original, rather actual release order.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/album_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct ordering of Taylor Swift's albums — album_levels","text":"","code":"library(ggplot2) studio_albums <- subset(taylor_albums, !ep)  # by default, albums get plotted in alphabetical order ggplot(studio_albums, aes(x = metacritic_score, y = album_name)) +   geom_col()   # use `album_levels` to create a sensible factor variable studio_albums$album_name <- factor(studio_albums$album_name,                                    levels = album_levels) ggplot(studio_albums, aes(x = metacritic_score, y = album_name)) +   geom_col()"},{"path":"https://taylor.wjakethompson.com/dev/reference/album_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palettes based on Taylor Swift's albums — album_palettes","title":"Color palettes based on Taylor Swift's albums — album_palettes","text":"Premade color palettes based Taylor Swifts album covers. details extend shorten palettes, create color palette, see color_palette().","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/album_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palettes based on Taylor Swift's albums — album_palettes","text":"","code":"album_palettes  album_compare"},{"path":"https://taylor.wjakethompson.com/dev/reference/album_palettes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Color palettes based on Taylor Swift's albums — album_palettes","text":"list length 15. element contains color palette one Taylor Swift's studio albums. list elements named according name album. object class taylor_color_palette (inherits vctrs_vctr, character) length 15.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/album_palettes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Color palettes based on Taylor Swift's albums — album_palettes","text":"Colors derived album covers using 'Colormind'.","code":""},{"path":[]},{"path":"https://taylor.wjakethompson.com/dev/reference/album_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palettes based on Taylor Swift's albums — album_palettes","text":"","code":"album_palettes #> $taylor_swift #> <color_palette[5]> #>     #1D4737  #>     #81A757  #>     #1BAEC6  #>     #523d28  #>     #E7DBCC  #>  #> $fearless #> <color_palette[5]> #>     #6E4823  #>     #976F34  #>     #CBA863  #>     #ECD59F  #>     #E1D4C2  #>  #> $fearless_tv #> <color_palette[5]> #>     #624324  #>     #A47F45  #>     #CAA462  #>     #C5AA7C  #>     #EEDBA9  #>  #> $speak_now #> <color_palette[5]> #>     #2E1924  #>     #6C3127  #>     #833C63  #>     #D1A0C7  #>     #F5E8E2  #>  #> $speak_now_tv #> <color_palette[5]> #>     #2A122C  #>     #4a2454  #>     #72325F  #>     #874886  #>     #96689A  #>  #> $red #> <color_palette[5]> #>     #201F39  #>     #A91E47  #>     #7E6358  #>     #B0A49A  #>     #DDD8C9  #>  #> $red_tv #> <color_palette[5]> #>     #400303  #>     #731803  #>     #967862  #>     #B38468  #>     #C7C5B6  #>  #> $`1989` #> <color_palette[5]> #>     #5D4E5D  #>     #846578  #>     #92573C  #>     #C6B69C  #>     #D8D8CF  #>  #> $`1989_tv` #> <color_palette[5]> #>     #487398  #>     #659BBB  #>     #8BB5D2  #>     #AFC5D4  #>     #E4DFD3  #>  #> $reputation #> <color_palette[5]> #>     #2C2C2C  #>     #515151  #>     #5B5B5B  #>     #6E6E6E  #>     #B9B9B9  #>  #> $lover #> <color_palette[5]> #>     #76BAE0  #>     #8C4F66  #>     #B8396B  #>     #EBBED3  #>     #FFF5CC  #>  #> $folklore #> <color_palette[5]> #>     #3E3E3E  #>     #545454  #>     #5C5C5C  #>     #949494  #>     #EBEBEB  #>  #> $evermore #> <color_palette[5]> #>     #160E10  #>     #421E18  #>     #D37F55  #>     #85796D  #>     #E0D9D7  #>  #> $midnights #> <color_palette[5]> #>     #121D27  #>     #5A658B  #>     #6F86A2  #>     #85A7BA  #>     #AA9EB6  #>  #> $tortured_poets #> <color_palette[5]> #>     #1C160F  #>     #3F3824  #>     #635B3A  #>     #ADA795  #>     #F7F4F0  #>   album_compare #> <color_palette[15]> #>     taylor_swift  #>     fearless  #>     fearless_tv  #>     speak_now  #>     speak_now_tv  #>     red  #>     red_tv  #>     1989  #>     1989_tv  #>     reputation  #>     lover  #>     folklore  #>     evermore  #>     midnights  #>     tortured_poets   album_palettes$evermore #> <color_palette[5]> #>     #160E10  #>     #421E18  #>     #D37F55  #>     #85796D  #>     #E0D9D7"},{"path":"https://taylor.wjakethompson.com/dev/reference/color_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom color palette — color_palette","title":"Create a custom color palette — color_palette","text":"creates character vector represents palettes printed, displays palette colors.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/color_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom color palette — color_palette","text":"","code":"color_palette(pal = character(), n = length(pal))  is_color_palette(pal)"},{"path":"https://taylor.wjakethompson.com/dev/reference/color_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom color palette — color_palette","text":"pal color_palette(): character vector hexadecimal codes is_color_palette(): object test n number colors","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/color_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a custom color palette — color_palette","text":"color palette object.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/color_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom color palette — color_palette","text":"","code":"# use color_palette() to extend or shorten an existing palette color_palette(album_palettes$lover, n = 10) #> <color_palette[10]> #>     #76BAE0  #>     #7F8AA9  #>     #895A73  #>     #9A4767  #>     #AE3D69  #>     #C35682  #>     #DA91B0  #>     #EDC4D2  #>     #F6DCCF  #>     #FFF5CC   color_palette(album_palettes$fearless, n = 10) #> <color_palette[10]> #>     #6E4823  #>     #80592A  #>     #926A32  #>     #A88243  #>     #BF9B58  #>     #D2B270  #>     #E1C68B  #>     #EAD4A2  #>     #E5D4B2  #>     #E1D4C2   color_palette(album_palettes$red, n = 3) #> <color_palette[3]> #>     #201F39  #>     #7E6358  #>     #DDD8C9   # you can also define your own color palette (my_pal <- color_palette(pal = c(\"#264653\", \"#2A9D8F\", \"#E9C46A\",                                  \"#F4A261\", \"#E76F51\"))) #> <color_palette[5]> #>     #264653  #>     #2A9D8F  #>     #E9C46A  #>     #F4A261  #>     #E76F51   # and then use that palette for plotting library(ggplot2) ggplot(faithfuld) +   geom_tile(aes(waiting, eruptions, fill = density)) +   scale_fill_gradientn(colours = my_pal) +   theme_minimal()"},{"path":"https://taylor.wjakethompson.com/dev/reference/eras_tour_surprise.html","id":null,"dir":"Reference","previous_headings":"","what":"The Eras Tour Surprise Songs — eras_tour_surprise","title":"The Eras Tour Surprise Songs — eras_tour_surprise","text":"data set containing surprise songs played Eras Tour first North American leg tour.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/eras_tour_surprise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Eras Tour Surprise Songs — eras_tour_surprise","text":"","code":"eras_tour_surprise"},{"path":"https://taylor.wjakethompson.com/dev/reference/eras_tour_surprise.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Eras Tour Surprise Songs — eras_tour_surprise","text":"tibble 166 rows 9 variables: leg: leg tour (e.g., North America, South America, etc.). date: date show ISO 8601 format (yyyy-mm-dd). city: location show. US shows, location city state. international shows, location city country. night: show number within city. dress: color dress Taylor wore given night. instrument: instrument used play song (guitar piano). song: track name primary surprise song. mashup: Additional songs included mashup primary song. guest: special guest () joined Taylor play song.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_albums.html","id":null,"dir":"Reference","previous_headings":"","what":"Taylor Swift colour scale for album comparisons — scale_fill_albums","title":"Taylor Swift colour scale for album comparisons — scale_fill_albums","text":"convenience wrapper comparing albums color. contrast scale_fill_taylor_d() scale_colour_taylor_d(), scale_fill_albums() scale_colour_albums() use single palette, one color per album. Specifically, album_compare palette used apply color associated album.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_albums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taylor Swift colour scale for album comparisons — scale_fill_albums","text":"","code":"scale_fill_albums(   ...,   aesthetics = \"fill\",   breaks = waiver(),   limits = force,   na.value = NA )  scale_colour_albums(   ...,   aesthetics = \"colour\",   breaks = waiver(),   limits = force,   na.value = NA )  scale_color_albums(   ...,   aesthetics = \"colour\",   breaks = waiver(),   limits = force,   na.value = NA )"},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_albums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taylor Swift colour scale for album comparisons — scale_fill_albums","text":"... arguments passed ggplot2::discrete_scale() aesthetics names aesthetics scale works . breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output. Also accepts rlang lambda function notation. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. na.value na.translate = TRUE, aesthetic value missing values displayed ? apply position scales NA always placed far right.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_albums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taylor Swift colour scale for album comparisons — scale_fill_albums","text":"color scale use plots created ggplot2::ggplot().","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_albums.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taylor Swift colour scale for album comparisons — scale_fill_albums","text":"","code":"library(ggplot2) studio <- subset(taylor_albums, !is.na(metacritic_score))  # create a plot that we want to color or fill by album ggplot(studio, aes(x = metacritic_score, y = album_name)) +   geom_col(aes(fill = album_name))   # apply a color inspired by each album cover ggplot(studio, aes(x = metacritic_score, y = album_name)) +   geom_col(aes(fill = album_name)) +   scale_fill_albums()   # even when the axis or levels are rearranged, the correct color is applied studio$album_name <- factor(studio$album_name, levels = album_levels) ggplot(studio, aes(x = metacritic_score, y = album_name)) +   geom_col(aes(fill = album_name)) +   scale_fill_albums()"},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_taylor.html","id":null,"dir":"Reference","previous_headings":"","what":"Taylor Swift colour scales based on album cover palettes — scale_colour_taylor_d","title":"Taylor Swift colour scales based on album cover palettes — scale_colour_taylor_d","text":"Taylor Swift colour scales based album cover palettes","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_taylor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taylor Swift colour scales based on album cover palettes — scale_colour_taylor_d","text":"","code":"scale_colour_taylor_d(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   album = \"Lover\",   aesthetics = \"colour\" )  scale_color_taylor_d(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   album = \"Lover\",   aesthetics = \"colour\" )  scale_fill_taylor_d(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   album = \"Lover\",   aesthetics = \"fill\" )  scale_colour_taylor_c(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   album = \"Lover\",   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   aesthetics = \"colour\" )  scale_color_taylor_c(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   album = \"Lover\",   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   aesthetics = \"colour\" )  scale_fill_taylor_c(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   album = \"Lover\",   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   aesthetics = \"fill\" )  scale_colour_taylor_b(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   album = \"Lover\",   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"coloursteps\",   aesthetics = \"colour\" )  scale_color_taylor_b(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   album = \"Lover\",   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"coloursteps\",   aesthetics = \"colour\" )  scale_fill_taylor_b(   ...,   alpha = 1,   begin = 0,   end = 1,   direction = 1,   album = \"Lover\",   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"coloursteps\",   aesthetics = \"fill\" )"},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_taylor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taylor Swift colour scales based on album cover palettes — scale_colour_taylor_d","text":"... arguments passed ggplot2::discrete_scale(), ggplot2::continuous_scale(), ggplot2::binned_scale() control name, limits, breaks, labels forth. alpha alpha transparency, number [0,1], see argument alpha hsv. begin, end (corrected) hue [0,1] color map begins ends. direction Sets order colors scale. 1, default, colors ordered darkest lightest. -1, order colors reversed. album character string indicating album used palette. aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). values colours evenly positioned along gradient vector gives position (0 1) colour colours vector. See rescale() convenience function map arbitrary range 0 1. space colour space calculate gradient. Must \"Lab\" - values deprecated. na.value Missing values replaced value. guide function used create guide name. See guides() information.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_taylor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taylor Swift colour scales based on album cover palettes — scale_colour_taylor_d","text":"color scale use plots created ggplot2::ggplot().","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/scale_taylor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taylor Swift colour scales based on album cover palettes — scale_colour_taylor_d","text":"","code":"# use taylor_d with discrete data library(ggplot2) (p <- ggplot(taylor_album_songs, aes(x = valence, y = energy)) +    geom_point(aes(color = mode_name), size = 2) +    theme_bw()) #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`).  p + scale_color_taylor_d() #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`).   # change scale label p + scale_fill_taylor_d(\"Mode of Track\") #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`).   # select album palette to use, see ?taylor::album_palettes for more details lover <- subset(taylor_album_songs, album_name == \"Lover\") (p <- ggplot(lover, aes(x = valence, y = track_name)) +    geom_col(aes(fill = track_name)) +    theme_minimal())  p + scale_fill_taylor_d(album = \"Lover\")  p + scale_fill_taylor_d(album = \"evermore\")   # use taylor_c with continuous data (p <- ggplot(taylor_album_songs, aes(valence, energy)) +    geom_point(aes(color = danceability)) +    theme_minimal()) #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`).  p + scale_color_taylor_c(album = \"Fearless\") #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`).  p + scale_color_taylor_c(album = \"folklore\") #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor-package.html","id":null,"dir":"Reference","previous_headings":"","what":"taylor: Lyrics and Song Data for Taylor Swift's Discography — taylor-package","title":"taylor: Lyrics and Song Data for Taylor Swift's Discography — taylor-package","text":"comprehensive resource data Taylor Swift songs. Data included officially released studio albums, extended plays (EPs), individual singles included. Data comes 'Genius' (lyrics) 'Spotify' (song characteristics). Additional functions included easily creating data visualizations color palettes inspired Taylor Swift's album covers.","code":""},{"path":[]},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"taylor: Lyrics and Song Data for Taylor Swift's Discography — taylor-package","text":"Maintainer: W. Jake Thompson wjakethompson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor-vctrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal vctrs methods — taylor-vctrs","title":"Internal vctrs methods — taylor-vctrs","text":"Internal vctrs methods","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_albums.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Taylor Swift's studio albums and EPs — taylor_albums","title":"Data for Taylor Swift's studio albums and EPs — taylor_albums","text":"data set containing names Taylor's official releases, album type, release date.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_albums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Taylor Swift's studio albums and EPs — taylor_albums","text":"","code":"taylor_albums"},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_albums.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Taylor Swift's studio albums and EPs — taylor_albums","text":"tibble 17 rows 5 variables: album_name: name album. NA song released separately one Taylor's studio albums EPs. ep: Logical. album full studio album (FALSE) extended play (TRUE). album_release: date album released, ISO-8601 format (YYYY-MM-DD). metacritic_score: official album rating metacritic. user_score: user rating metacritic.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_albums.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data for Taylor Swift's studio albums and EPs — taylor_albums","text":"https://en.wikipedia.org/wiki/Taylor_Swift_albums_discography https://www.metacritic.com/person/taylor-swift","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_albums.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Taylor Swift's studio albums and EPs — taylor_albums","text":"data set includes official studio albums EPs new tracks. means compilations EPs subset original albums included (e.g., folklore: escapism chapter, folklore: sleepless nights chapter, etc.)","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_songs.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Taylor Swift songs — taylor_all_songs","title":"Data for Taylor Swift songs — taylor_all_songs","text":"data set containing lyrics , characteristics , officially released Taylor Swift songs. includes albums, EPs, individually released singles.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_songs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Taylor Swift songs — taylor_all_songs","text":"","code":"taylor_all_songs  taylor_album_songs"},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_songs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Taylor Swift songs — taylor_all_songs","text":"taylor_all_songs tibble 364 rows 29 variables. row one song. album_name: name album. NA song released separately one Taylor's studio albums EPs. ep: Logical. album full studio album (FALSE) extended play (TRUE). album_release: date album released, ISO-8601 format (YYYY-MM-DD). track_number: order song album EP. track_name: name song. artist: name song artist. Usually Taylor Swift, show artists songs Taylor featured . featuring: artists featured track. bonus_track: Logical. track present deluxe edition album (TRUE) also appear standard version (FALSE). promotional_release: date song released promotional single, ISO-8601 format (YYYY-MM-DD).. NA song never released promotional single. single_release: date song released official single, ISO-8601 format (YYYY-MM-DD). NA song never released official single. track_release: date song first publicly released. earliest album_release, promotional_release, single_release. next set variables come Spotify API. See documentation https://developer.spotify.com/documentation/web-api/reference/ complete details. danceability: suitable track dancing. 0.0 = least danceable, 1.0 = danceable. energy: Perceptual measure intensity activity. 0.0 = least energy, 1.0 = energy. key: key track . Integer maps standard Pitch Class notation. loudness: Loudness track decibels (dB), averaged across track. mode: Modality track (major/minor). 0 = minor, 1 = major. speechiness: presence spoken words track. Values 0.66 indicate track probably made entirely spoken words. Values 0.33 0.66 indicate music speech. Values less 0.33 indicate track probably music non-speech tracks. acousticness: Confidence track acoustic. 0.0 = low confidence, 1.0 = high confidence. instrumentalness: Confidence track instrumental track (.e., vocals). 0.0 = low confidence, 1.0 = high confidence. liveness: Confidence track live recording (.e., audience present). 0.0 = low confidence, 1.0 = high confidence. valence: Musical positiveness conveyed track. 0.0 = low valence (e.g., sad, depressed, angry), 1.0 = high valence (e.g., happy, cheerful, euphoric). tempo: Estimated tempo track beats per minute (BPM). time_signature: Estimated overall time signature. duration_ms: Duration track milliseconds. explicit: Logical. track contain explicit lyrics (TRUE) (FALSE). Finally, last set variables includes calculated Spotify API data, list-column containing song lyrics. key_name: Corresponds directly key, integer converted key name using Pitch Class notation (e.g., 0 becomes C). mode_name: Corresponds directly mode, integer converted mode name (e.g., 0 becomes minor). key_mode: combination key_name mode_name variables (e.g., C minor). lyrics: list-column containing lyrics song. lyrics can unnested tidyr::unnest() (.e., tidyr::unnest(taylor_all_songs, lyrics)). element data frame 4 variables. : line: line number song. lyric: lyric given line. element: element song line lyric belong , defined https://genius.com/ (e.g., Verse 1, Chorus, etc.). element_artist: artist performing element. Usually Taylor Swift, artists appear featured track (e.g., HAIM featured body, crime). taylor_album_songs tibble containing 29 variables, 240 rows, one song official studio album (see Details).","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_songs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data for Taylor Swift songs — taylor_all_songs","text":"https://genius.com/artists/Taylor-swift https://open.spotify.com/artist/06HL4z0CvFAxyc27GXpf02","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/taylor_songs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Taylor Swift songs — taylor_all_songs","text":"taylor_all_songs contains songs Taylor's discography. Lyrics come Genius, songs characteristics come Spotify API. data known missing. Beautiful Eyes EP available streaming service, therefore data Spotify API. Similarly, song American Girl, cover Tom Petty original, released exclusively Rhapsody (now Napster), therefore also data Spotify API. songs released separately Taylor's official albums EPs, album information included. example, Wanna Live Forever released part Fifty Shades Darker movie soundtrack. However, album_name column song NA, indicating appear one Taylor's albums. Songs included one time. example, song appears standard deluxe version album, one record song data set. Similarly, compilations included. example, following release folklore, Taylor released several EPs subsets original folklore album (e.g., folklore: escapism chapter, folklore: sleepless nights chapter, etc.). included. Finally, bonus tracks (exception voice memos similar) included; however, consistency, album name always shortened, common name. example, lakes bonus track folklore (deluxe edition), album_name listed folklore. bonus_track variable can used determine songs appeared standard version album vs. deluxe platinum edition. taylor_album_songs contains information taylor_all_songs, Taylor's official studio albums. Thus, taylor_album_songs subset taylor_all_songs, EPs individual singles excluded. Critically, subset also includes versions owned Taylor possible, stan artists owning work. means although Fearless Fearless (Taylor's Version) appear full taylor_all_songs data, Fearless (Taylor's Version) appears subset. also means data set change additional re-releases made available (.e., Red replaced Red (Taylor's Version) version 1.0.0).","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/title_case.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert string to title case — title_case","title":"Convert string to title case — title_case","text":"Capitalize first letter word, convert remaining string lower case.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/title_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert string to title case — title_case","text":"","code":"title_case(string)"},{"path":"https://taylor.wjakethompson.com/dev/reference/title_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert string to title case — title_case","text":"string String modify.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/title_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert string to title case — title_case","text":"character string first letter word capitalized.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/title_case.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert string to title case — title_case","text":"","code":"title_case(\"taylor swift\") #> [1] \"Taylor Swift\" title_case(\"Taylor Swift\") #> [1] \"Taylor Swift\" title_case(\"TAYLOR SWIFT\") #> [1] \"Taylor Swift\""},{"path":"https://taylor.wjakethompson.com/dev/reference/translate_bracelet.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a friendship bracelet — translate_bracelet","title":"Translate a friendship bracelet — translate_bracelet","text":"Receive friendship bracelet Eras Tour figure lyrics bracelet abbreviated? Now can find !","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/translate_bracelet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a friendship bracelet — translate_bracelet","text":"","code":"translate_bracelet(abbr)"},{"path":"https://taylor.wjakethompson.com/dev/reference/translate_bracelet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a friendship bracelet — translate_bracelet","text":"abbr abbreviated lyrics (.e., first letter word).","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/translate_bracelet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a friendship bracelet — translate_bracelet","text":"character vector name song abbreviated line.","code":""},{"path":"https://taylor.wjakethompson.com/dev/reference/translate_bracelet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a friendship bracelet — translate_bracelet","text":"","code":"translate_bracelet(\"bykmosftvfw\") #> All Too Well (Taylor's Version): But you keep my old scarf from that very first week #>  #> All Too Well (10 Minute Version) [Taylor's Version] [From The Vault]: But you keep my old scarf from that very first week #>   translate_bracelet(\"kimbkiagkitbimhotw\") #> Karma: karma is my boyfriend Karma is a god Karma is the breeze in my hair on the weekend #>  #> Karma (Remix): karma is my boyfriend Karma is a god Karma is the breeze in my hair on the weekend #>"},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"taylor-development-version","dir":"Changelog","previous_headings":"","what":"taylor (development version)","title":"taylor (development version)","text":"Error messages improved display function called, rather function error appeared (@olivroy, #49). Color palettes now displayed using cli instead crayon (@olivroy, #49). Added “us.” Gracie Abrams’s Secret Us taylor_all_songs. Added songs Taylor written (didn’t record feature ) taylor_all_songs. includes: “1 step forward, 3 steps back” “deja vu” Olivia Rodrigo’s SOUR “Best Days Life” Kellie Pickler’s self-titled album “Better Man” Little Big Town’s Breaker “Came ” Calvin Harris (feat. Rihanna) “TMZ” Weird Al Yankovic’s Apocalypse “’ll Always Find Way Back Home” Miley Cyrus Hannah Montana: Movie soundtrack Removed Spotify data John Mayer’s “Half Heart,” version featuring Taylor Swift longer available.","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"taylor-310","dir":"Changelog","previous_headings":"","what":"taylor 3.1.0","title":"taylor 3.1.0","text":"CRAN release: 2024-05-08","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"new-features-3-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"taylor 3.1.0","text":"New data visualization tools added TORTURED POETS DEPARTMENT. Added lyrics Spotify audio features taylor_all_songs taylor_album_songs. Added composite critic score Metacritic taylor_albums. Added new themed color palette album_palettes. Added new single color album_compare. Spotify data “’re Losing (Vault)” added. Surprise songs South American Asia-Pacific legs tour added eras_tour_surprise.","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"minor-improvements-and-fixed-3-1-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixed","title":"taylor 3.1.0","text":"Fixed installation instructions README (@scarioscia, #37). Corrected non-ASCII characters data-raw/lyrics/ (@ericwu17, #44, #45). Updated documentation additional vignettes. vignette(\"taylor\") provides overview package links example analyses. vigentte(\"lyrics\") describes different methods accessing lyrics nested list column (#35).","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"taylor-300","dir":"Changelog","previous_headings":"","what":"taylor 3.0.0","title":"taylor 3.0.0","text":"CRAN release: 2023-11-06","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"breaking-changes-3-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"taylor 3.0.0","text":"Speak Now (Taylor’s Version) replaced Speak Now taylor_album_songs (#25). 1989 (Taylor’s Version) replaced 1989 taylor_album_songs (#30).","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"new-features-3-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"taylor 3.0.0","text":"new data set, eras_tour_surprise added includes information surprise songs played first North American leg Eras Tour. new function, translate_bracelet() can used find song line first letter word, common Eras Tour friendship bracelets.","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"minor-improvements-and-fixes-3-0-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"taylor 3.0.0","text":"New color palettes added album_palettes Speak Now (Taylor’s Version) 1989 (Taylor’s Version). New single colors added album_compare Speak Now (Taylor’s Version) 1989 (Taylor’s Version). Metacritic scores Speak Now (Taylor’s Version) 1989 (Taylor’s Version) added taylor_albums. Hex logo pkgdown website updated 1989 (Taylor’s Version) theme. Added Spotify data “Hits Different” released streaming part Midnights (Til Dawn Edition). Added “Snow Beach (Lana Del Rey)” “Karma (Remix)” Midnights (Til Dawn Edition). Added “Alcott” National’s First Two Pages Frankenstein taylor_all_songs. Added Era’s Tour promotional singles “Girls Loved ,” “Movie (Taylor’s Version),” “Eyes Open (Taylor’s Version),” “Safe & Sound (Taylor’s Version).” “Love (Taylor’s Version)” “Wildest Dreams (Taylor’s Version)” moved non-album singles 1989 (Taylor’s Version). type argument color_palette() removed. argument previously deprecated warning version 1.0.0.","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"taylor-201","dir":"Changelog","previous_headings":"","what":"taylor 2.0.1","title":"taylor 2.0.1","text":"CRAN release: 2023-03-08","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"minor-improvements-and-fixes-2-0-1","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"taylor 2.0.1","text":"Fixed S3 generic/method consistency issue vctrs classes creating warning r-devel CRAN. Updated Metacritic user ratings.","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"taylor-200","dir":"Changelog","previous_headings":"","what":"taylor 2.0.0","title":"taylor 2.0.0","text":"CRAN release: 2022-11-08","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"breaking-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"taylor 2.0.0","text":"Added Midnights taylor_all_songs taylor_album_songs. Spotify updated audio data songs Red (Taylor’s Version). changes reflected taylor_all_songs taylor_album_songs. Spotify updated audio data “Renegade”. changes reflected taylor_all_songs taylor_album_songs.","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"new-features-2-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"taylor 2.0.0","text":"new user_score column user ratings Metacritic added taylor_albums. Added “Lover (Remix)” Shawn Mendes, Taylor’s cover Earth, Wind, Fire’s “September,” “Three Sad Virgins” Saturday Night Live taylor_all_songs. Added “Carolina” Crawdads Sing soundtrack taylor_all_songs. “Love (Taylor’s Version)” added non-album single. Presumably eventually move 1989 (Taylor’s Version). Added “Joker Queen” Ed Sheeran’s = taylor_all_songs.","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"minor-improvements-and-fixes-2-0-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"taylor 2.0.0","text":"New color palette added album_palettes Midnights. New single color added album_compare Midnights. Metacritic score Midnights added taylor_albums. Fixed additional non-ASCII characters lyrics albums (@ericwu17, #16). Minor tweaks color palettes album better capture vibes, rather just pulling album artwork.","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"taylor-100","dir":"Changelog","previous_headings":"","what":"taylor 1.0.0","title":"taylor 1.0.0","text":"CRAN release: 2021-12-14","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"breaking-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"taylor 1.0.0","text":"Red (Taylor’s Version) replaced Red taylor_album_songs (#9). type argument color_palette() deprecated removed future release. Previously, wanted interpolate colors originally specified, needed specify type = \"continuous\". misleading, color_palette() still returned discrete number colors (n). Now, interpolation happens automatically n greater length(pal).","code":"my_colors <- c(ku_blue = \"#0051ba\", \"firebrick\", \"#ffc82d\") my_palette <- color_palette(my_colors)  # old color_palette(my_palette, n = 10, type = \"continuous\") color_palette(my_palette, n = 2, type = \"discrete\")  # new color_palette(my_palette, n = 10) color_palette(my_palette, n = 2)"},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"minor-improvements-and-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"taylor 1.0.0","text":"New color palette added album_palettes Red (Taylor’s Version). New single color added album_compare Red (Taylor’s Version). Metacritic score Red (Taylor’s Version) added taylor_albums. “Wildest Dreams (Taylor’s Version)” added non-album single. Presumably eventually move 1989 (Taylor’s Version). Hex logo pkgdown website updated Red (Taylor’s Version) theme. Fix majority non-ASCII characters song lyrics. Remaining characters en/em dashes letters accent marks. color_palette() now preserves color names, either R color specifications (.e., colors()) named vector supplied pal (#12).","code":"my_colors <- c(ku_blue = \"#0051ba\", \"firebrick\", \"#ffc82d\") color_palette(my_colors)"},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"taylor-021","dir":"Changelog","previous_headings":"","what":"taylor 0.2.1","title":"taylor 0.2.1","text":"CRAN release: 2021-09-23 Added “Birch” Big Red Machine’s Long Think ’s Gonna Last? taylor_all_songs. Updated tests upcoming release testthat (@hadley, #10).","code":""},{"path":"https://taylor.wjakethompson.com/dev/news/index.html","id":"taylor-020","dir":"Changelog","previous_headings":"","what":"taylor 0.2.0","title":"taylor 0.2.0","text":"CRAN release: 2021-08-17 Added NEWS.md file track changes package.","code":""}]
